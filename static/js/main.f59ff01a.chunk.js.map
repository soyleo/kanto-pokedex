{"version":3,"sources":["content/ErrorBoundry.js","content/SearchBox.js","content/Scroll.js","content/Card.js","content/CardList.js","containers/App.js","reportWebVitals.js","index.js"],"names":["ErrorBoundry","props","state","hasError","error","info","this","setState","className","alt","src","children","React","Component","SearchBox","searchChange","type","placeholder","onChange","Scroll","style","overflowY","height","Card","name","url","useState","poke","setPoke","useEffect","fetch","then","response","json","data","sprites","front_default","id","weight","types","map","tipo","i","value","CardList","characters","char","App","onSearchChange","event","searchfield","target","userresponse","results","filteredCharacters","filter","character","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f59ff01a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass ErrorBoundry extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({ hasError: true });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return(\r\n                <div>\r\n                    <img className='error' alt='Error' src=\"https://i.imgflip.com/3kmejr.jpg\" />\r\n                    <h1>A savage ERROR has appeared!</h1>;\r\n                </div>\r\n            ) \r\n        }\r\n        else {\r\n            return this.props.children;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default ErrorBoundry;","import './SearchBox.css'\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n    return (\r\n        <div>\r\n            <input className='searchbox' type='search' placeholder='Search your PokÃ©mon by his name' onChange={searchChange} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","const Scroll = (props) => {\r\n    return (\r\n        <div style={{ overflowY: 'scroll', height: '50vh' }}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import {useState, useEffect} from 'react';\r\nimport './Card.css';\r\nconst Card = ({ name, url }) => { \r\n\r\n    const [poke, setPoke] = useState(null);\r\n    useEffect(()=>{\r\n        fetch(url).then(response => response.json()).then(data=> {\r\n            setPoke(data);\r\n        })\r\n    },[url]);\r\n    const onClick=(event)=>{\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='card shadow'>\r\n            \r\n            { poke &&  <div>\r\n                <img className='image' alt={name} src={poke.sprites.front_default} />\r\n                <div>\r\n                    <h2>{name}</h2>\r\n                    <p>Pokedex number: {poke.id}</p>\r\n                    <p>Height: {poke.height}</p>\r\n                    <p>Wieght: {poke.weight}</p>\r\n                    <p>Type: {\r\n                        poke.types.map((tipo, i) =>{\r\n                            return <button className={`btn ${tipo.type.name}`} key={i} value={tipo.type.url}>{tipo.type.name}</button>\r\n                        })\r\n                    }</p>\r\n                </div>\r\n            </div>}\r\n        </div>\r\n           \r\n    );\r\n}\r\n\r\nexport default Card;","import Card from './Card';\r\n\r\nconst CardList = ({ characters }) => {\r\n    return (\r\n        <div>\r\n            {\r\n                characters.map((char, i) => {\r\n                    return <Card key={i} name={char.name} url={char.url} />\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\nimport './App.css';\nimport ErrorBoundry from '../content/ErrorBoundry';\nimport SearchBox from '../content/SearchBox';\nimport Scroll from '../content/Scroll';\nimport CardList from '../content/CardList';\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      characters: [],\n      searchfield: ''\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://pokeapi.co/api/v2/pokemon?limit=151&offset=0')\n      .then(response => {\n        return response.json();\n      })\n      .then(userresponse => {\n        this.setState({characters: userresponse.results})\n      });\n\n  }\n\n  onSearchChange = (event) => {\n    this.setState({ searchfield: event.target.value });\n\n  }\n\n  render() {\n    const { characters, searchfield } = this.state;\n    const filteredCharacters = characters.filter(character => {\n      return character.name.toLowerCase().includes(searchfield.toLowerCase());\n    });\n    return !characters.length ?\n      <h1 className='tc'>Loading</h1> :\n      (\n        <div className='tc container'>\n          <div className='header'>\n            <h1 className='f1'>Kanto Pokedex</h1>\n            <ErrorBoundry>\n              <SearchBox searchChange={this.onSearchChange} />\n            </ErrorBoundry>\n          </div>\n          <Scroll>\n            <ErrorBoundry>\n              <CardList characters={filteredCharacters} />\n            </ErrorBoundry>\n          </Scroll>\n        </div>\n\n      );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}